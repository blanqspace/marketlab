from __future__ import annotations

import sys
from typing import Callable

from .ipc import bus


def _ask_yes_no(prompt: str) -> bool:
    """Ask a yes/no question on stdin and return True if 'y'."""
    while True:
        sys.stdout.write(f"{prompt} [y/n]: ")
        sys.stdout.flush()
        ans = sys.stdin.readline().strip().lower()
        if ans in ("y", "yes"):
            return True
        if ans in ("n", "no"):
            return False


def _ask_id(prompt: str) -> str:
    """Ask for an Order ID; reject empty input."""
    while True:
        sys.stdout.write(f"{prompt}: ")
        sys.stdout.flush()
        val = sys.stdin.readline().strip()
        if val:
            return val
        sys.stdout.write("ID darf nicht leer sein.\n")
        sys.stdout.flush()


def _print_menu() -> None:
    sys.stdout.write(
        "\nMarketLab Control Menu\n"
        "  1) Pause\n"
        "  2) Resume\n"
        "  3) Stop\n"
        "  4) Confirm(ID)\n"
        "  5) Reject(ID)\n"
        "  6) Mode: Paper\n"
        "  7) Mode: Live\n"
        "  9) Exit\n"
    )
    sys.stdout.flush()


def _enqueue_and_print(cmd: str, args: dict) -> None:
    cmd_id = bus.enqueue(cmd, args, source="cli")
    sys.stdout.write(f"OK: {cmd} -> {cmd_id}\n")
    sys.stdout.flush()


def run_menu() -> None:
    """Run a simple prompt-based control menu (stdin only)."""
    while True:
        _print_menu()
        sys.stdout.write("Auswahl: ")
        sys.stdout.flush()
        choice = sys.stdin.readline().strip()
        if choice == "1":
            if _ask_yes_no("Pause ausf端hren?"):
                _enqueue_and_print("state.pause", {})
        elif choice == "2":
            if _ask_yes_no("Resume ausf端hren?"):
                _enqueue_and_print("state.resume", {})
        elif choice == "3":
            if _ask_yes_no("Stop ausf端hren?"):
                _enqueue_and_print("state.stop", {})
        elif choice == "4":
            oid = _ask_id("Order-ID eingeben")
            if _ask_yes_no(f"Confirm {oid}?"):
                _enqueue_and_print("orders.confirm", {"id": oid})
        elif choice == "5":
            oid = _ask_id("Order-ID eingeben")
            if _ask_yes_no(f"Reject {oid}?"):
                _enqueue_and_print("orders.reject", {"id": oid})
        elif choice == "6":
            if _ask_yes_no("Mode Paper starten?"):
                _enqueue_and_print(
                    "mode.switch",
                    {"target": "paper", "args": {"symbols": ["AAPL"], "timeframe": "1m"}},
                )
        elif choice == "7":
            if _ask_yes_no("Mode Live starten?"):
                _enqueue_and_print(
                    "mode.switch",
                    {"target": "live", "args": {"symbols": ["AAPL"], "timeframe": "1m"}},
                )
        elif choice == "9":
            sys.stdout.write("Beenden...\n"); sys.stdout.flush(); return
        else:
            sys.stdout.write("Ung端ltige Auswahl.\n")
            sys.stdout.flush()


